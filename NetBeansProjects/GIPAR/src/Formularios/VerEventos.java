package Formularios;

import Conexiones.ConexionMYSQL;
import Esencial.Usuario;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 * Clase que representa una ventana a trav√©s de la cual un usuario puede gestionar su cuenta o gestionar el inicio de una partida.
 * @author Stalin
 */
public class VerEventos extends javax.swing.JFrame {
    
    public static Usuario usuarioActual;
    private Fondo  imagenFondo;
    public static String hostname="";
    private String idEvento;

    /**
     * Creates new form MenuSala
     */
    public VerEventos() {
        imagenFondo = new Fondo("/Imagenes/fondoRegistro.jpg");
        
        
        
        initComponents();
        
        
        this.setSize(imagenFondo.getWidth(),imagenFondo.getHeight());
        
        fondo.add(imagenFondo);
        fondo.setOpaque(false);

        this.setLocationRelativeTo(null);
        cargarEventos();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fondo = new javax.swing.JPanel();
        btnVolver = new javax.swing.JButton();
        lblEvento = new javax.swing.JLabel();
        cboEventos = new javax.swing.JComboBox();
        lblFechaInicio = new javax.swing.JLabel();
        txtFechaInicio = new javax.swing.JTextField();
        lblFechaFinal = new javax.swing.JLabel();
        txtFechaFinal = new javax.swing.JTextField();
        lblActividades = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtComisiones = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtArticulos = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtActividades = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fondo.setBackground(new java.awt.Color(0, 153, 0));

        btnVolver.setText("Volver");
        btnVolver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVolverMouseClicked(evt);
            }
        });

        lblEvento.setText("Evento:");

        cboEventos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboEventosActionPerformed(evt);
            }
        });

        lblFechaInicio.setText("Fecha Inicio:");

        txtFechaInicio.setEditable(false);

        lblFechaFinal.setText("Fecha Final:");

        txtFechaFinal.setEditable(false);
        txtFechaFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaFinalActionPerformed(evt);
            }
        });

        lblActividades.setText("Actividades");

        txtComisiones.setEditable(false);
        txtComisiones.setColumns(20);
        txtComisiones.setRows(5);
        jScrollPane1.setViewportView(txtComisiones);

        txtArticulos.setEditable(false);
        txtArticulos.setColumns(20);
        txtArticulos.setRows(5);
        jScrollPane2.setViewportView(txtArticulos);

        txtActividades.setEditable(false);
        txtActividades.setColumns(20);
        txtActividades.setRows(5);
        jScrollPane3.setViewportView(txtActividades);

        jLabel1.setText("Comisiones");

        jLabel2.setText("Articulos");

        javax.swing.GroupLayout fondoLayout = new javax.swing.GroupLayout(fondo);
        fondo.setLayout(fondoLayout);
        fondoLayout.setHorizontalGroup(
            fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fondoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fondoLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                        .addGap(18, 18, 18))
                    .addGroup(fondoLayout.createSequentialGroup()
                        .addComponent(lblEvento)
                        .addGap(18, 18, 18)
                        .addComponent(cboEventos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(lblFechaInicio)
                        .addGap(18, 18, 18)
                        .addComponent(txtFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblFechaFinal)
                        .addGap(18, 18, 18)
                        .addComponent(txtFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(btnVolver)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fondoLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(lblActividades)
                        .addGap(203, 203, 203)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(110, 110, 110))))
        );
        fondoLayout.setVerticalGroup(
            fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fondoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEvento)
                    .addComponent(cboEventos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFechaInicio)
                    .addComponent(txtFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFechaFinal)
                    .addComponent(txtFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVolver))
                .addGap(18, 18, 18)
                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblActividades)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverMouseClicked
        String[] args=null;
        GestionarEventos.hostname = this.hostname;
        GestionarEventos.usuarioActual = this.usuarioActual;
        GestionarEventos.main(args);
        this.dispose();
    }//GEN-LAST:event_btnVolverMouseClicked

    private void cboEventosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboEventosActionPerformed
        txtActividades.setText("");
        txtComisiones.setText("");
        txtArticulos.setText("");
        cargarDatos();
    }//GEN-LAST:event_cboEventosActionPerformed

    private void txtFechaFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaFinalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaFinalActionPerformed

    
    public boolean cargarEventos(){
        
        String usuario;
        if(this.usuarioActual.getCargo().equalsIgnoreCase("Miembro"))
            usuario="miembro";
        else
            usuario="miembrogipar";
        
        ConexionMYSQL mysql = new ConexionMYSQL(hostname,"bdgipar",usuario);
        Connection conexion = mysql.conectar();
        String sentenciaSQL = "SELECT nombre FROM eventos;";
        
        try {
            Statement ST = conexion.createStatement();
            ResultSet RS = ST.executeQuery(sentenciaSQL);
            
            while(RS.next()){
                cboEventos.addItem(RS.getString("nombre"));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            return false;
        }
      
        return true;
    }
    
    public boolean cargarDatos(){
    
        String usuario;
        if(this.usuarioActual.getCargo().equalsIgnoreCase("Miembro"))
            usuario="miembro";
        else
            usuario="miembrogipar";
        
        ConexionMYSQL mysql = new ConexionMYSQL(hostname,"bdgipar",usuario);
        Connection conexion = mysql.conectar();
        Statement ST;
        ResultSet RS;
        String sentenciaSQL = "SELECT idEvento "
                            + "FROM eventos "
                            + "WHERE nombre='"+cboEventos.getSelectedItem()+"';";
           
        idEvento="";
        try {
            ST = conexion.createStatement();
            RS = ST.executeQuery(sentenciaSQL);
            
            if(RS.next()){
                idEvento = RS.getString("idEvento");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            
        }
        
        sentenciaSQL = "SELECT fechaInicio,fechaFinal "
                     + "FROM eventos "
                     + "WHERE idEvento='"+idEvento+"';";
        
        try {
            ST = conexion.createStatement();
            RS = ST.executeQuery(sentenciaSQL);
            
            if(RS.next()){
                txtFechaInicio.setText(RS.getString("fechaInicio"));
                txtFechaFinal.setText(RS.getString("fechaFinal"));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            
        }
        
        sentenciaSQL = "SELECT costo, nombre  "
                     + "FROM actividades "
                     + "WHERE idEvento='"+idEvento+"';";
        try {
            ST = conexion.createStatement();
            RS = ST.executeQuery(sentenciaSQL);
            
            while(RS.next()){
                txtActividades.setText(txtActividades.getText()+"Nombre: "+RS.getString("nombre")+"\n");
                txtActividades.setText(txtActividades.getText()+"Costo: "+RS.getString("costo")+"\n\n");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            return false;
        }
        
        
        sentenciaSQL = "SELECT DISTINCT comisiones.nombre, actividades.nombre "
                     + "FROM eventos INNER JOIN (actividades INNER JOIN comisiones ON comisiones.idActividad=actividades.idActividad) ON actividades.idEvento=eventos.idEvento "
                     + "WHERE eventos.idEvento='"+idEvento+"';";
        try {
            ST = conexion.createStatement();
            RS = ST.executeQuery(sentenciaSQL);
            
            while(RS.next()){
                txtComisiones.setText(txtComisiones.getText()+"Nombre: "+RS.getString("comisiones.nombre")+"\n");
                txtComisiones.setText(txtComisiones.getText()+"Actividad: "+RS.getString("actividades.nombre")+"\n\n");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            return false;
        }
        
        sentenciaSQL = "SELECT articulos.nombre, area, link "
                     + "FROM eventos INNER JOIN (articulos_eventos INNER JOIN articulos ON articulos_eventos.idArticulo=articulos.idArticulo) ON articulos_eventos.idEvento=eventos.idEvento "
                     + "WHERE eventos.idEvento='"+idEvento+"';";
        try {
            ST = conexion.createStatement();
            RS = ST.executeQuery(sentenciaSQL);
            
            while(RS.next()){
                txtArticulos.setText(txtArticulos.getText()+"Nombre: "+RS.getString("articulos.nombre")+"\n");
                txtArticulos.setText(txtArticulos.getText()+"√Årea Acci√≥n: "+RS.getString("area")+"\n");
                txtArticulos.setText(txtArticulos.getText()+"Link: "+RS.getString("Link")+"\n\n");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            return false;
        }
        
        
        
        return true;
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VerEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VerEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VerEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VerEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VerEventos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox cboEventos;
    private javax.swing.JPanel fondo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblActividades;
    private javax.swing.JLabel lblEvento;
    private javax.swing.JLabel lblFechaFinal;
    private javax.swing.JLabel lblFechaInicio;
    private javax.swing.JTextArea txtActividades;
    private javax.swing.JTextArea txtArticulos;
    private javax.swing.JTextArea txtComisiones;
    private javax.swing.JTextField txtFechaFinal;
    private javax.swing.JTextField txtFechaInicio;
    // End of variables declaration//GEN-END:variables

    
}
